{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasan\\\\react-scheduler\\\\src\\\\components\\\\Toolbar\\\\Toolbar.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Toolbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.handleTimeFormatStateChange = e => {\n      if (this.props.onTimeFormatStateChange) {\n        this.props.onTimeFormatStateChange(e.target.checked);\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-format-section\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"time-format-chkbx\",\n        children: [\"Time format:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: this.props.timeFormatState,\n          onChange: this.handleTimeFormatStateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chkbx-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Toolbar","constructor","args","handleTimeFormatStateChange","e","props","onTimeFormatStateChange","target","checked","render","className","children","type","timeFormatState","onChange","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/sasan/react-scheduler/src/components/Toolbar/Toolbar.js"],"sourcesContent":["import React, { Component } from 'react';\r\nexport default class Toolbar extends Component {\r\n    handleTimeFormatStateChange = (e) => {\r\n        if (this.props.onTimeFormatStateChange) {\r\n            this.props.onTimeFormatStateChange(e.target.checked)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='time-format-section'>\r\n                <label className='time-format-chkbx'>\r\n                    Time format:\r\n                    <input type='checkbox'\r\n                        checked={ this.props.timeFormatState }\r\n                        onChange={ this.handleTimeFormatStateChange }\r\n                    />\r\n                    <div className='chkbx-text'></div>\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,eAAe,MAAMC,OAAO,SAASH,SAAS,CAAC;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC3CC,2BAA2B,GAAIC,CAAC,IAAK;MACjC,IAAI,IAAI,CAACC,KAAK,CAACC,uBAAuB,EAAE;QACpC,IAAI,CAACD,KAAK,CAACC,uBAAuB,CAACF,CAAC,CAACG,MAAM,CAACC,OAAO,CAAC;MACxD;IACJ,CAAC;EAAA;EACDC,MAAMA,CAAA,EAAG;IACL,oBACIV,OAAA;MAAKW,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAChCZ,OAAA;QAAOW,SAAS,EAAC,mBAAmB;QAAAC,QAAA,GAAC,cAEjC,eAAAZ,OAAA;UAAOa,IAAI,EAAC,UAAU;UAClBJ,OAAO,EAAG,IAAI,CAACH,KAAK,CAACQ,eAAiB;UACtCC,QAAQ,EAAG,IAAI,CAACX;QAA6B;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACFnB,OAAA;UAAKW,SAAS,EAAC;QAAY;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}