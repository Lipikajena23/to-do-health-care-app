{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasan\\\\react-scheduler\\\\src\\\\components\\\\Scheduler\\\\Scheduler.js\";\nimport React, { Component } from 'react';\nimport 'dhtmlx-scheduler';\nimport 'dhtmlx-scheduler/codebase/dhtmlxscheduler.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scheduler = window.scheduler;\nexport default class Scheduler extends Component {\n  initSchedulerEvents() {\n    if (scheduler._$initialized) {\n      return;\n    }\n    const onDataUpdated = this.props.onDataUpdated;\n    scheduler.attachEvent('onEventAdded', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('create', ev, id);\n      }\n    });\n    scheduler.attachEvent('onEventChanged', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('update', ev, id);\n      }\n    });\n    scheduler.attachEvent('onEventDeleted', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('delete', ev, id);\n      }\n    });\n    scheduler._$initialized = true;\n  }\n  componentDidMount() {\n    scheduler.skin = 'material';\n    scheduler.config.header = ['day', 'week', 'month', 'date', 'prev', 'today', 'next'];\n    scheduler.config.hour_date = '%g:%i %A';\n    scheduler.xy.scale_width = 70;\n    this.initSchedulerEvents();\n    const {\n      events\n    } = this.props;\n    scheduler.init(this.schedulerContainer, new Date(2020, 5, 10));\n    scheduler.clearAll();\n    scheduler.parse(events);\n  }\n  shouldComponentUpdate(nextProps) {\n    return this.props.timeFormatState !== nextProps.timeFormatState;\n  }\n  componentDidUpdate() {\n    scheduler.render();\n  }\n  setTimeFormat(state) {\n    scheduler.config.hour_date = state ? '%H:%i' : '%g:%i %A';\n    scheduler.templates.hour_scale = scheduler.date.date_to_str(scheduler.config.hour_date);\n  }\n  render() {\n    const {\n      timeFormatState\n    } = this.props;\n    this.setTimeFormat(timeFormatState);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: input => {\n        this.schedulerContainer = input;\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","scheduler","window","Scheduler","initSchedulerEvents","_$initialized","onDataUpdated","props","attachEvent","id","ev","componentDidMount","skin","config","header","hour_date","xy","scale_width","events","init","schedulerContainer","Date","clearAll","parse","shouldComponentUpdate","nextProps","timeFormatState","componentDidUpdate","render","setTimeFormat","state","templates","hour_scale","date","date_to_str","ref","input","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/sasan/react-scheduler/src/components/Scheduler/Scheduler.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport 'dhtmlx-scheduler';\r\nimport 'dhtmlx-scheduler/codebase/dhtmlxscheduler.css';\r\n \r\nconst scheduler = window.scheduler;\r\n \r\nexport default class Scheduler extends Component {\r\n    initSchedulerEvents() {\r\n        if (scheduler._$initialized) {\r\n            return;\r\n        }\r\n \r\n        const onDataUpdated = this.props.onDataUpdated;\r\n \r\n        scheduler.attachEvent('onEventAdded', (id, ev) => {\r\n            if (onDataUpdated) {\r\n                onDataUpdated('create', ev, id);\r\n            }\r\n        });\r\n \r\n        scheduler.attachEvent('onEventChanged', (id, ev) => {\r\n            if (onDataUpdated) {\r\n                onDataUpdated('update', ev, id);\r\n            }\r\n        });\r\n \r\n        scheduler.attachEvent('onEventDeleted', (id, ev) => {\r\n            if (onDataUpdated) {\r\n                onDataUpdated('delete', ev, id);\r\n            }\r\n        });\r\n        scheduler._$initialized = true;\r\n  }\r\n     componentDidMount() {\r\n        scheduler.skin = 'material';\r\n        scheduler.config.header = [\r\n            'day',\r\n            'week',\r\n            'month',\r\n            'date',\r\n            'prev',\r\n            'today',\r\n            'next'\r\n        ];\r\n        scheduler.config.hour_date = '%g:%i %A';\r\n        scheduler.xy.scale_width = 70;\r\n \r\n        this.initSchedulerEvents();\r\n \r\n        const { events } = this.props;\r\n        scheduler.init(this.schedulerContainer, new Date(2020, 5, 10));\r\n        scheduler.clearAll();\r\n        scheduler.parse(events);\r\n    }\r\n    shouldComponentUpdate(nextProps) {\r\n        return this.props.timeFormatState !== nextProps.timeFormatState;\r\n    }\r\n \r\n    componentDidUpdate() {\r\n        scheduler.render();\r\n    }\r\n \r\n    setTimeFormat(state) {\r\n        scheduler.config.hour_date = state ? '%H:%i' : '%g:%i %A';\r\n        scheduler.templates.hour_scale = scheduler.date.date_to_str(scheduler.config.hour_date);\r\n    }\r\n \r\n    render() {\r\n        const { timeFormatState } = this.props;\r\n        this.setTimeFormat(timeFormatState);\r\n        return (\r\n            <div\r\n                ref={ (input) => { this.schedulerContainer = input } }\r\n                style={ { width: '100%', height: '100%' } }\r\n            ></div>\r\n        );\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}