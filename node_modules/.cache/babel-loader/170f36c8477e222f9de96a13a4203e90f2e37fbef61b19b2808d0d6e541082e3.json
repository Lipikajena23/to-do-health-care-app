{"ast":null,"code":"import React,{Component}from'react';import Scheduler from'./components/Scheduler';import'./App.css';import Toolbar from'./components/Toolbar';import MessageArea from'./components/MessageArea';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const data=[{start_date:'2020-06-10 6:00',end_date:'2020-06-10 8:00',text:'Event 1',id:1},{start_date:'2020-06-13 10:00',end_date:'2020-06-13 18:00',text:'Event 2',id:2}];class App extends Component{constructor(){super(...arguments);this.state={currentTimeFormatState:true,messages:[]};this.logDataUpdate=(action,ev,id)=>{const text=ev&&ev.text?\" (\".concat(ev.text,\")\"):'';const message=\"event \".concat(action,\": \").concat(id,\" \").concat(text);this.addMessage(message);};this.handleTimeFormatStateChange=state=>{this.setState({currentTimeFormatState:state});};}addMessage(message){const maxLogLength=5;const newMessage={message};const messages=[newMessage,...this.state.messages];if(messages.length>maxLogLength){messages.length=maxLogLength;}this.setState({messages});}render(){const{currentTimeFormatState,messages}=this.state;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"tool-bar\",children:/*#__PURE__*/_jsx(Toolbar,{timeFormatState:currentTimeFormatState,onTimeFormatStateChange:this.handleTimeFormatStateChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"scheduler-container\",children:/*#__PURE__*/_jsx(Scheduler,{events:data,timeFormatState:currentTimeFormatState,onDataUpdated:this.logDataUpdate})}),/*#__PURE__*/_jsx(MessageArea,{messages:messages})]});}}export default App;","map":{"version":3,"names":["React","Component","Scheduler","Toolbar","MessageArea","jsx","_jsx","jsxs","_jsxs","data","start_date","end_date","text","id","App","constructor","arguments","state","currentTimeFormatState","messages","logDataUpdate","action","ev","concat","message","addMessage","handleTimeFormatStateChange","setState","maxLogLength","newMessage","length","render","children","className","timeFormatState","onTimeFormatStateChange","events","onDataUpdated"],"sources":["C:/Users/sasan/react-scheduler/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Scheduler from './components/Scheduler';\nimport './App.css';\nimport Toolbar from './components/Toolbar';\nimport MessageArea from './components/MessageArea';\n \nconst data = [\n    { start_date:'2020-06-10 6:00', end_date:'2020-06-10 8:00', text:'Event 1', id: 1 },\n    { start_date:'2020-06-13 10:00', end_date:'2020-06-13 18:00', text:'Event 2', id: 2 }\n];\n \nclass App extends Component {\n\n  state = {\n    currentTimeFormatState: true,\n    messages: []\n};\naddMessage(message) {\n    const maxLogLength = 5;\n    const newMessage = { message };\n    const messages = [\n        newMessage,\n        ...this.state.messages\n    ];\n\n    if (messages.length > maxLogLength) {\n        messages.length = maxLogLength;\n    }\n    this.setState({ messages });\n}\n\nlogDataUpdate = (action, ev, id) => {\n    const text = ev && ev.text ? ` (${ev.text})` : '';\n    const message = `event ${action}: ${id} ${text}`;\n    this.addMessage(message);\n}\n\nhandleTimeFormatStateChange = (state) => {\n    this.setState({\n        currentTimeFormatState: state\n    });\n}\nrender() {\n  const { currentTimeFormatState, messages } = this.state;\n  return (\n      <div>\n          <div className=\"tool-bar\">\n              <Toolbar\n                  timeFormatState={currentTimeFormatState}\n                  onTimeFormatStateChange={this.handleTimeFormatStateChange}\n              />\n          </div>\n          <div className='scheduler-container'>\n              <Scheduler\n                  events={data}\n                  timeFormatState={currentTimeFormatState}\n                  onDataUpdated={this.logDataUpdate}\n              />\n          </div>\n          <MessageArea\n              messages={messages}\n          />\n      </div>\n  );\n}\n }\n export default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,WAAW,CAClB,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,IAAI,CAAG,CACT,CAAEC,UAAU,CAAC,iBAAiB,CAAEC,QAAQ,CAAC,iBAAiB,CAAEC,IAAI,CAAC,SAAS,CAAEC,EAAE,CAAE,CAAE,CAAC,CACnF,CAAEH,UAAU,CAAC,kBAAkB,CAAEC,QAAQ,CAAC,kBAAkB,CAAEC,IAAI,CAAC,SAAS,CAAEC,EAAE,CAAE,CAAE,CAAC,CACxF,CAED,KAAM,CAAAC,GAAG,QAAS,CAAAb,SAAU,CAAAc,YAAA,WAAAC,SAAA,OAE1BC,KAAK,CAAG,CACNC,sBAAsB,CAAE,IAAI,CAC5BC,QAAQ,CAAE,EACd,CAAC,MAeDC,aAAa,CAAG,CAACC,MAAM,CAAEC,EAAE,CAAET,EAAE,GAAK,CAChC,KAAM,CAAAD,IAAI,CAAGU,EAAE,EAAIA,EAAE,CAACV,IAAI,MAAAW,MAAA,CAAQD,EAAE,CAACV,IAAI,MAAM,EAAE,CACjD,KAAM,CAAAY,OAAO,UAAAD,MAAA,CAAYF,MAAM,OAAAE,MAAA,CAAKV,EAAE,MAAAU,MAAA,CAAIX,IAAI,CAAE,CAChD,IAAI,CAACa,UAAU,CAACD,OAAO,CAAC,CAC5B,CAAC,MAEDE,2BAA2B,CAAIT,KAAK,EAAK,CACrC,IAAI,CAACU,QAAQ,CAAC,CACVT,sBAAsB,CAAED,KAC5B,CAAC,CAAC,CACN,CAAC,EAxBDQ,UAAUA,CAACD,OAAO,CAAE,CAChB,KAAM,CAAAI,YAAY,CAAG,CAAC,CACtB,KAAM,CAAAC,UAAU,CAAG,CAAEL,OAAQ,CAAC,CAC9B,KAAM,CAAAL,QAAQ,CAAG,CACbU,UAAU,CACV,GAAG,IAAI,CAACZ,KAAK,CAACE,QAAQ,CACzB,CAED,GAAIA,QAAQ,CAACW,MAAM,CAAGF,YAAY,CAAE,CAChCT,QAAQ,CAACW,MAAM,CAAGF,YAAY,CAClC,CACA,IAAI,CAACD,QAAQ,CAAC,CAAER,QAAS,CAAC,CAAC,CAC/B,CAaAY,MAAMA,CAAA,CAAG,CACP,KAAM,CAAEb,sBAAsB,CAAEC,QAAS,CAAC,CAAG,IAAI,CAACF,KAAK,CACvD,mBACIT,KAAA,QAAAwB,QAAA,eACI1B,IAAA,QAAK2B,SAAS,CAAC,UAAU,CAAAD,QAAA,cACrB1B,IAAA,CAACH,OAAO,EACJ+B,eAAe,CAAEhB,sBAAuB,CACxCiB,uBAAuB,CAAE,IAAI,CAACT,2BAA4B,CAC7D,CAAC,CACD,CAAC,cACNpB,IAAA,QAAK2B,SAAS,CAAC,qBAAqB,CAAAD,QAAA,cAChC1B,IAAA,CAACJ,SAAS,EACNkC,MAAM,CAAE3B,IAAK,CACbyB,eAAe,CAAEhB,sBAAuB,CACxCmB,aAAa,CAAE,IAAI,CAACjB,aAAc,CACrC,CAAC,CACD,CAAC,cACNd,IAAA,CAACF,WAAW,EACRe,QAAQ,CAAEA,QAAS,CACtB,CAAC,EACD,CAAC,CAEZ,CACC,CACA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}